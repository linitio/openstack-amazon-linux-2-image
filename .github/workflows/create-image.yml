# This is a basic workflow to help you get started with Actions

name: CI

env:
  VERSION: ${{ github.ref_name }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
    - '*'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install prerequies
        run: |
          sudo apt-get update
          sudo apt install libguestfs-tools binfmt-support coreutils cryptsetup-bin e2fsprogs lvm2 mount parted qemu-user-static qemu-utils wget lsb-release
      # Runs a set of commands using the runners shell
      - name: Download base image from AWS
        run: |
         sudo wget https://cdn.amazonlinux.com/os-images/${{ env.VERSION }}/kvm/amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2
      - name: Making some changes on base image
        run: |
         qemu-img convert -f qcow2 -O raw amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2 amzn2-kvm.raw
         sudo mount -o loop,offset=2097152 amzn2-kvm.raw /mnt
         sudo cp config/cloud.cfg /mnt/etc/cloud/cloud.cfg
         sudo umount /mnt
         sudo rm amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2
         sudo qemu-img convert -f raw -O qcow2 amzn2-kvm.raw amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt-tmp.qcow2
      - name: Sparsify image
        run: |
         sudo virt-sparsify --convert qcow2 --compress amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt-tmp.qcow2 amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Amazon Linux 2 ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2
          asset_name: amzn2-kvm-${{ env.VERSION }}-x86_64.xfs.gpt.qcow2
          asset_content_type: application/octet-stream
